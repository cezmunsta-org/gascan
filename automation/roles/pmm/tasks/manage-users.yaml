---
- name: Create users
  ansible.builtin.uri:
    url: '{{ pmm_server_uri }}{{ pmm_grafana_api_users }}'
    method: POST
    force_basic_auth: true
    validate_certs: '{{ pmm_server_insecure }}'
    headers:
      Content-Type: application/json
    body_format: json
    body:
      name: '{{ item.user }}'
      login: '{{ item.login }}'
      password: '{{ item.password }}'
    status_code:
    - 200
    - 412
    url_password: '{{ pmm_api_credentials[1] }}'
    url_username: '{{ pmm_api_credentials[0] }}'
  no_log: true
  loop: "{{ pmm_manage_users | selectattr('password', 'defined') }}"

- name: Manage Grafana Admins
  ansible.builtin.include_tasks: grafana-admin.yaml
  no_log: true
  when: item.is_grafana_admin | bool
  loop: "{{ pmm_manage_users | selectattr('is_grafana_admin', 'defined') }}"

- name: Create users API keys
  ansible.builtin.uri:
    url: '{{ pmm_server_uri }}{{ pmm_grafana_api_tokens }}'
    method: POST
    force_basic_auth: true
    validate_certs: '{{ pmm_server_insecure }}'
    headers:
      Content-Type: application/json
    body_format: json
    body:
      name: '{{ item.login }}-{{ item.role }}'
      role: '{{ item.role }}'
    status_code:
    - 200
    - 409
    url_password: '{{ pmm_api_credentials[1] }}'
    url_username: '{{ pmm_api_credentials[0] }}'
  no_log: true
  register: pmm_manage_users_api_keys
  when: item.requires_token | bool
  loop: "{{ pmm_manage_users | selectattr('requires_token', 'defined') }}"
...
